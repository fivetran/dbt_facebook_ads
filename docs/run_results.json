{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/run-results/v5.json", "dbt_version": "1.7.13", "generated_at": "2024-05-23T22:24:34.733534Z", "invocation_id": "ad91bbd3-fdff-4102-bad5-ccaf48bca1a6", "env": {}}, "results": [{"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.795967Z", "completed_at": "2024-05-23T22:24:33.803288Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.804954Z", "completed_at": "2024-05-23T22:24:33.804974Z"}], "thread_id": "Thread-3", "execution_time": 0.048519134521484375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`facebook_ads_source`.`facebook_ads_ad_set_history_data`", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.799249Z", "completed_at": "2024-05-23T22:24:33.803640Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.805715Z", "completed_at": "2024-05-23T22:24:33.805719Z"}], "thread_id": "Thread-4", "execution_time": 0.0490107536315918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad_actions_tmp", "compiled": true, "compiled_code": "\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`facebook_ads_source`.`facebook_ads_basic_ad_actions_data`", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad_actions_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.759656Z", "completed_at": "2024-05-23T22:24:33.804177Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.806692Z", "completed_at": "2024-05-23T22:24:33.806697Z"}], "thread_id": "Thread-1", "execution_time": 0.05391287803649902, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`facebook_ads_source`.`facebook_ads_account_history_data`", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.792502Z", "completed_at": "2024-05-23T22:24:33.804435Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.807000Z", "completed_at": "2024-05-23T22:24:33.807003Z"}], "thread_id": "Thread-2", "execution_time": 0.05254697799682617, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`facebook_ads_source`.`facebook_ads_ad_history_data`", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.822206Z", "completed_at": "2024-05-23T22:24:33.823408Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.824207Z", "completed_at": "2024-05-23T22:24:33.824221Z"}], "thread_id": "Thread-2", "execution_time": 0.013176202774047852, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_account_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.812693Z", "completed_at": "2024-05-23T22:24:33.824648Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.827062Z", "completed_at": "2024-05-23T22:24:33.827067Z"}], "thread_id": "Thread-3", "execution_time": 0.018815994262695312, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`facebook_ads_source`.`facebook_ads_basic_ad_data`", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.816273Z", "completed_at": "2024-05-23T22:24:33.825613Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.828053Z", "completed_at": "2024-05-23T22:24:33.828057Z"}], "thread_id": "Thread-4", "execution_time": 0.01869964599609375, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`facebook_ads_source`.`facebook_ads_campaign_history_data`", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.819308Z", "completed_at": "2024-05-23T22:24:33.826166Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.828955Z", "completed_at": "2024-05-23T22:24:33.828959Z"}], "thread_id": "Thread-1", "execution_time": 0.018912076950073242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history_tmp", "compiled": true, "compiled_code": "\n\n\n    \n    \n        \n        \n        \n        select * \n    from `dbt-package-testing`.`facebook_ads_source`.`facebook_ads_creative_history_data`", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__creative_history_tmp`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.830988Z", "completed_at": "2024-05-23T22:24:33.833090Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.835868Z", "completed_at": "2024-05-23T22:24:33.835874Z"}], "thread_id": "Thread-2", "execution_time": 0.010843038558959961, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_ad_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.836406Z", "completed_at": "2024-05-23T22:24:33.837677Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.842366Z", "completed_at": "2024-05-23T22:24:33.842371Z"}], "thread_id": "Thread-3", "execution_time": 0.009998798370361328, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_ad_set_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.838777Z", "completed_at": "2024-05-23T22:24:33.839896Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.843291Z", "completed_at": "2024-05-23T22:24:33.843295Z"}], "thread_id": "Thread-4", "execution_time": 0.00991368293762207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_basic_ad_actions_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.840400Z", "completed_at": "2024-05-23T22:24:33.841509Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.844083Z", "completed_at": "2024-05-23T22:24:33.844086Z"}], "thread_id": "Thread-1", "execution_time": 0.009974002838134766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_basic_ad_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.845780Z", "completed_at": "2024-05-23T22:24:33.846995Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.849381Z", "completed_at": "2024-05-23T22:24:33.849385Z"}], "thread_id": "Thread-2", "execution_time": 0.008952856063842773, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_campaign_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.849855Z", "completed_at": "2024-05-23T22:24:33.851065Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:33.862155Z", "completed_at": "2024-05-23T22:24:33.862162Z"}], "thread_id": "Thread-3", "execution_time": 0.01653289794921875, "adapter_response": {}, "message": null, "failures": null, "unique_id": "seed.facebook_ads_integration_tests.facebook_ads_creative_history_data", "compiled": null, "compiled_code": null, "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.870103Z", "completed_at": "2024-05-23T22:24:34.168022Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.169548Z", "completed_at": "2024-05-23T22:24:34.169556Z"}], "thread_id": "Thread-3", "execution_time": 0.30179405212402344, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    ad_set_id\n    \n as \n    \n    ad_set_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    \n    \n    creative_id\n    \n as \n    \n    creative_id\n    \n, \n    cast(null as string) as \n    \n    conversion_domain\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_id,\n        name as ad_name,\n        cast(account_id as bigint) as account_id,\n        cast(ad_set_id as bigint) as ad_set_id,   \n        cast(campaign_id as bigint) as campaign_id,\n        cast(creative_id as bigint) as creative_id,\n        conversion_domain,\n        row_number() over (partition by source_relation, id order by updated_time desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.856727Z", "completed_at": "2024-05-23T22:24:34.168390Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.170155Z", "completed_at": "2024-05-23T22:24:34.170158Z"}], "thread_id": "Thread-1", "execution_time": 0.3226480484008789, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad_actions", "compiled": true, "compiled_code": "with base as (\n\n    select * \n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad_actions_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    action_type\n    \n as \n    \n    action_type\n    \n, \n    \n    \n    ad_id\n    \n as \n    \n    ad_id\n    \n, \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    index\n    \n as \n    \n    index\n    \n, \n    \n    \n    value\n    \n as \n    \n    value\n    \n, \n    \n    \n    inline\n    \n as conversion_value_inline , \n    \n    \n    _1_d_view\n    \n as \n    \n    _1_d_view\n    \n, \n    \n    \n    _7_d_click\n    \n as \n    \n    _7_d_click\n    \n, \n    cast(null as string) as \n    \n    _28_d_click\n    \n \n\n\n        \n\n\n, cast('' as string) as source_relation\n\n\n\n    from base\n),\n\nfinal as (\n    \n    select \n        source_relation, \n        lower(action_type) as action_type,\n        cast(ad_id as bigint) as ad_id,\n        date as date_day,\n        cast(coalesce(value, 0) as FLOAT64) as conversion_value\n        \n        \n            \n                \n                    , coalesce(cast(conversion_value_inline as FLOAT64), 0) as conversion_value_inline\n                \n            \n                \n                    , coalesce(cast(_1_d_view as FLOAT64), 0) as _1_d_view\n                \n            \n                \n                    , coalesce(cast(_7_d_click as FLOAT64), 0) as _7_d_click\n                \n            \n                \n                    , coalesce(cast(_28_d_click as FLOAT64), 0) as _28_d_click\n                \n            \n        \n\n    from fields\n)\n\nselect *\nfrom final", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad_actions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.865500Z", "completed_at": "2024-05-23T22:24:34.168976Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.171119Z", "completed_at": "2024-05-23T22:24:34.171123Z"}], "thread_id": "Thread-2", "execution_time": 0.309459924697876, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__account_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as string) as \n    \n    account_status\n    \n , \n    cast(null as string) as \n    \n    business_country_code\n    \n , \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    cast(null as string) as \n    \n    currency\n    \n , \n    cast(null as string) as \n    \n    timezone_name\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(id as bigint) as account_id,\n        _fivetran_synced,\n        name as account_name,\n        account_status,\n        business_country_code,\n        created_time as created_at,\n        currency,\n        timezone_name,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:33.852124Z", "completed_at": "2024-05-23T22:24:34.284184Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.284734Z", "completed_at": "2024-05-23T22:24:34.284741Z"}], "thread_id": "Thread-4", "execution_time": 0.4367709159851074, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__ad_set_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    campaign_id\n    \n as \n    \n    campaign_id\n    \n, \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    end_time\n    \n , \n    cast(null as string) as \n    \n    bid_strategy\n    \n , \n    cast(null as INT64) as \n    \n    daily_budget\n    \n , \n    cast(null as INT64) as \n    \n    budget_remaining\n    \n , \n    cast(null as string) as \n    \n    status\n    \n , \n    cast(null as string) as \n    \n    optimization_goal\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        cast(id as bigint) as ad_set_id,\n        name as ad_set_name,\n        cast(account_id as bigint) as account_id,\n        cast(campaign_id as bigint) as campaign_id,\n        start_time as start_at,\n        end_time as end_at,\n        bid_strategy,\n        daily_budget,\n        budget_remaining,\n        status,\n        optimization_goal,\n        row_number() over (partition by source_relation, id order by updated_time desc) = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.286401Z", "completed_at": "2024-05-23T22:24:34.295489Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.296017Z", "completed_at": "2024-05-23T22:24:34.296021Z"}], "thread_id": "Thread-4", "execution_time": 0.010676860809326172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_history_source_relation__ad_id__updated_at.664b870e6c", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_id, updated_at\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history`\n    group by source_relation, ad_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.297663Z", "completed_at": "2024-05-23T22:24:34.304004Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.304648Z", "completed_at": "2024-05-23T22:24:34.304655Z"}], "thread_id": "Thread-4", "execution_time": 0.008095979690551758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_ad_id.11429d3064", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history`\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.306379Z", "completed_at": "2024-05-23T22:24:34.309671Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.310186Z", "completed_at": "2024-05-23T22:24:34.310190Z"}], "thread_id": "Thread-4", "execution_time": 0.004861116409301758, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_history_updated_at.250a5a84e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history`\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.311814Z", "completed_at": "2024-05-23T22:24:34.318413Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.318924Z", "completed_at": "2024-05-23T22:24:34.318929Z"}], "thread_id": "Thread-4", "execution_time": 0.008156061172485352, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.int_facebook_ads__conversions", "compiled": true, "compiled_code": "with report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad_actions`\n),\n\nmetrics as (\n\n    select\n        source_relation,\n        ad_id,\n        date_day,\n        sum(conversion_value) as conversion_value\n\n        \n\n\n    \n        , sum(conversion_value_inline) as conversion_value_inline\n    \n        , sum(_1_d_view) as _1_d_view\n    \n        , sum(_7_d_click) as _7_d_click\n    \n        , sum(_28_d_click) as _28_d_click\n    \n\n\n\n\n    from report\n    where \n    (action_type = 'lead')  or (action_type like 'offsite_conversion%') \n\n    group by 1,2,3\n)\n\nselect * \nfrom metrics", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`int_facebook_ads__conversions`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.320637Z", "completed_at": "2024-05-23T22:24:34.324437Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.324956Z", "completed_at": "2024-05-23T22:24:34.324960Z"}], "thread_id": "Thread-4", "execution_time": 0.005426883697509766, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_actions_source_relation__date_day__ad_id__action_type.3f1bea13d9", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_id, action_type\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad_actions`\n    group by source_relation, date_day, ad_id, action_type\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.326623Z", "completed_at": "2024-05-23T22:24:34.330367Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.330877Z", "completed_at": "2024-05-23T22:24:34.330881Z"}], "thread_id": "Thread-4", "execution_time": 0.005311012268066406, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__account_history_source_relation__account_id___fivetran_synced.f81aca1247", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, account_id, _fivetran_synced\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`\n    group by source_relation, account_id, _fivetran_synced\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.332486Z", "completed_at": "2024-05-23T22:24:34.335495Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.335976Z", "completed_at": "2024-05-23T22:24:34.335980Z"}], "thread_id": "Thread-4", "execution_time": 0.004497051239013672, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history__fivetran_synced.0570e35e1f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.337547Z", "completed_at": "2024-05-23T22:24:34.340573Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.341056Z", "completed_at": "2024-05-23T22:24:34.341060Z"}], "thread_id": "Thread-4", "execution_time": 0.004539966583251953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__account_history_account_id.f1cf38c40f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.342665Z", "completed_at": "2024-05-23T22:24:34.346803Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.347321Z", "completed_at": "2024-05-23T22:24:34.347325Z"}], "thread_id": "Thread-4", "execution_time": 0.005690813064575195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__ad_set_history_source_relation__ad_set_id__updated_at.ff1d43114a", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, ad_set_id, updated_at\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history`\n    group by source_relation, ad_set_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.348913Z", "completed_at": "2024-05-23T22:24:34.351970Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.352462Z", "completed_at": "2024-05-23T22:24:34.352466Z"}], "thread_id": "Thread-4", "execution_time": 0.004561901092529297, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_ad_set_id.e19a1df1bb", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history`\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.354069Z", "completed_at": "2024-05-23T22:24:34.357006Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.357498Z", "completed_at": "2024-05-23T22:24:34.357502Z"}], "thread_id": "Thread-4", "execution_time": 0.00446319580078125, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__ad_set_history_updated_at.ef7fafe0fa", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history`\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.175528Z", "completed_at": "2024-05-23T22:24:34.506055Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.506781Z", "completed_at": "2024-05-23T22:24:34.506788Z"}], "thread_id": "Thread-3", "execution_time": 0.3340461254119873, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__basic_ad", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    ad_id\n    \n as \n    \n    ad_id\n    \n, \n    cast(null as string) as \n    \n    ad_name\n    \n , \n    cast(null as string) as \n    \n    adset_name\n    \n , \n    \n    \n    date\n    \n as \n    \n    date\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    impressions\n    \n as \n    \n    impressions\n    \n, \n    \n    \n    inline_link_clicks\n    \n as \n    \n    inline_link_clicks\n    \n, \n    \n    \n    spend\n    \n as \n    \n    spend\n    \n, \n    cast(null as INT64) as \n    \n    reach\n    \n , \n    cast(null as FLOAT64) as \n    \n    frequency\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        cast(ad_id as bigint) as ad_id,\n        ad_name,\n        adset_name as ad_set_name,\n        date as date_day,\n        cast(account_id as bigint) as account_id,\n        impressions,\n        coalesce(inline_link_clicks,0) as clicks,\n        spend\n\n        \n                , reach\n            \n                , frequency\n            \n\n        \n\n\n\n\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.514847Z", "completed_at": "2024-05-23T22:24:34.519686Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.520659Z", "completed_at": "2024-05-23T22:24:34.520665Z"}], "thread_id": "Thread-3", "execution_time": 0.012186050415039062, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_account_id.d06f6d861b", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.510615Z", "completed_at": "2024-05-23T22:24:34.520305Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.521998Z", "completed_at": "2024-05-23T22:24:34.522002Z"}], "thread_id": "Thread-4", "execution_time": 0.014095067977905273, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__basic_ad_source_relation__date_day__ad_id__account_id.9c647961f0", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, ad_id, account_id\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`\n    group by source_relation, date_day, ad_id, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.184593Z", "completed_at": "2024-05-23T22:24:34.540223Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.549472Z", "completed_at": "2024-05-23T22:24:34.549477Z"}], "thread_id": "Thread-2", "execution_time": 0.37560391426086426, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__creative_history_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    _fivetran_id\n    \n as \n    \n    _fivetran_id\n    \n, \n    \n    \n    _fivetran_synced\n    \n as \n    \n    _fivetran_synced\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    \n    \n    page_link\n    \n as \n    \n    page_link\n    \n, \n    \n    \n    template_page_link\n    \n as \n    \n    template_page_link\n    \n, \n    \n    \n    url_tags\n    \n as \n    \n    url_tags\n    \n, \n    \n    \n    asset_feed_spec_link_urls\n    \n as \n    \n    asset_feed_spec_link_urls\n    \n, \n    \n    \n    object_story_link_data_child_attachments\n    \n as \n    \n    object_story_link_data_child_attachments\n    \n, \n    \n    \n    object_story_link_data_caption\n    \n as \n    \n    object_story_link_data_caption\n    \n, \n    \n    \n    object_story_link_data_description\n    \n as \n    \n    object_story_link_data_description\n    \n, \n    \n    \n    object_story_link_data_link\n    \n as \n    \n    object_story_link_data_link\n    \n, \n    \n    \n    object_story_link_data_message\n    \n as \n    \n    object_story_link_data_message\n    \n, \n    cast(null as string) as \n    \n    template_app_link_spec_android\n    \n , \n    \n    \n    template_app_link_spec_ios\n    \n as \n    \n    template_app_link_spec_ios\n    \n, \n    cast(null as string) as \n    \n    template_app_link_spec_ipad\n    \n , \n    cast(null as string) as \n    \n    template_app_link_spec_iphone\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        _fivetran_id,\n        _fivetran_synced,\n        cast(id as bigint) as creative_id,\n        cast(account_id as bigint) as account_id,\n        name as creative_name,\n        page_link,\n        template_page_link,\n        url_tags,\n        asset_feed_spec_link_urls,\n        object_story_link_data_child_attachments,\n        object_story_link_data_caption, \n        object_story_link_data_description, \n        object_story_link_data_link, \n        object_story_link_data_message,\n        template_app_link_spec_ios,\n        template_app_link_spec_ipad,\n        template_app_link_spec_android,\n        template_app_link_spec_iphone,\n        row_number() over (partition by source_relation, id order by _fivetran_synced desc) = 1 as is_most_recent_record\n    from fields\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__creative_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.536660Z", "completed_at": "2024-05-23T22:24:34.549204Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.550801Z", "completed_at": "2024-05-23T22:24:34.550804Z"}], "thread_id": "Thread-3", "execution_time": 0.028020858764648438, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__basic_ad_ad_id.2611b250fc", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.540498Z", "completed_at": "2024-05-23T22:24:34.550006Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.552169Z", "completed_at": "2024-05-23T22:24:34.552173Z"}], "thread_id": "Thread-4", "execution_time": 0.017089128494262695, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__account_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`\n\n), \n\nconversion_report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`int_facebook_ads__conversions`\n\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        accounts.account_status,\n        accounts.business_country_code,\n        accounts.created_at,\n        accounts.currency,\n        accounts.timezone_name,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n        \n\n\n\n\n        , sum(coalesce(conversion_report.conversion_value, 0)) as conversion_value\n        \n\n\n    \n        , sum(coalesce(conversion_value_inline, 0)) as conversion_value_inline\n    \n        , sum(coalesce(_1_d_view, 0)) as _1_d_view\n    \n        , sum(coalesce(_7_d_click, 0)) as _7_d_click\n    \n        , sum(coalesce(_28_d_click, 0)) as _28_d_click\n    \n\n\n\n\n    from report \n    left join conversion_report\n        on report.date_day = conversion_report.date_day\n        and report.ad_id = conversion_report.ad_id\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    group by 1,2,3,4,5,6,7,8,9\n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__account_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.181115Z", "completed_at": "2024-05-23T22:24:34.573306Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.573810Z", "completed_at": "2024-05-23T22:24:34.573816Z"}], "thread_id": "Thread-1", "execution_time": 0.4000968933105469, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads_source.stg_facebook_ads__campaign_history", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select * \n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history_tmp`\n),\n\nfields as (\n\n    select\n        \n    \n    \n    updated_time\n    \n as \n    \n    updated_time\n    \n, \n    cast(null as timestamp) as \n    \n    created_time\n    \n , \n    \n    \n    account_id\n    \n as \n    \n    account_id\n    \n, \n    \n    \n    id\n    \n as \n    \n    id\n    \n, \n    \n    \n    name\n    \n as \n    \n    name\n    \n, \n    cast(null as timestamp) as \n    \n    start_time\n    \n , \n    cast(null as timestamp) as \n    \n    stop_time\n    \n , \n    cast(null as string) as \n    \n    status\n    \n , \n    cast(null as INT64) as \n    \n    daily_budget\n    \n , \n    cast(null as INT64) as \n    \n    lifetime_budget\n    \n , \n    cast(null as FLOAT64) as \n    \n    budget_remaining\n    \n \n\n\n        \n    \n        \n\n\n, cast('' as string) as source_relation\n\n\n\n\n    from base\n),\n\nfinal as (\n\n    select\n        source_relation, \n        updated_time as updated_at,\n        created_time as created_at,\n        cast(account_id as bigint) as account_id,\n        cast(id as bigint) as campaign_id,\n        name as campaign_name,\n        start_time as start_at,\n        stop_time as end_at,\n        status,\n        daily_budget,\n        lifetime_budget,\n        budget_remaining,\n        row_number() over (partition by source_relation, id order by updated_time desc) = 1 as is_most_recent_record\n    from fields\n\n)\n\nselect * \nfrom final", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.554732Z", "completed_at": "2024-05-23T22:24:34.578422Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.580000Z", "completed_at": "2024-05-23T22:24:34.580005Z"}], "thread_id": "Thread-2", "execution_time": 0.028525114059448242, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__url_tags", "compiled": true, "compiled_code": "\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__creative_history`\n    where is_most_recent_record = true\n), \n\nrequired_fields as (\n\n    select\n        source_relation,\n        _fivetran_id,\n        creative_id,\n        url_tags\n    from base\n    where url_tags is not null\n), \n\n\n\n  cleaned_json as (\n\n      select\n          source_relation,\n          _fivetran_id,\n          creative_id,\n          json_extract_array(replace(trim(url_tags, '\"'),'\\\\','')) as cleaned_url_tags\n      from required_fields\n  ), \n\n  unnested as (\n\n      select \n        source_relation,\n        _fivetran_id, \n        creative_id, \n        url_tag_element\n      from cleaned_json\n      left join unnest(cleaned_url_tags) as url_tag_element\n      where cleaned_url_tags is not null\n  ), \n\n  fields as (\n\n      select\n          source_relation,\n          _fivetran_id,\n          creative_id,\n          json_extract_scalar(url_tag_element, '$.key') as key,\n          json_extract_scalar(url_tag_element, '$.value') as value,\n          json_extract_scalar(url_tag_element, '$.type') as type\n      from unnested\n  )\n\n \n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__url_tags`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.565704Z", "completed_at": "2024-05-23T22:24:34.578760Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.580770Z", "completed_at": "2024-05-23T22:24:34.580773Z"}], "thread_id": "Thread-3", "execution_time": 0.028651714324951172, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__creative_history_source_relation___fivetran_id.2466dae947", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__creative_history`\n    group by source_relation, _fivetran_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.570139Z", "completed_at": "2024-05-23T22:24:34.579335Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.581791Z", "completed_at": "2024-05-23T22:24:34.581794Z"}], "thread_id": "Thread-4", "execution_time": 0.024590015411376953, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history__fivetran_synced.3b0593cb4f", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_synced\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__creative_history`\nwhere _fivetran_synced is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.575424Z", "completed_at": "2024-05-23T22:24:34.580285Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.582855Z", "completed_at": "2024-05-23T22:24:34.582858Z"}], "thread_id": "Thread-1", "execution_time": 0.00967097282409668, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__creative_history_creative_id.eb4d804261", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect creative_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__creative_history`\nwhere creative_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.586633Z", "completed_at": "2024-05-23T22:24:34.600689Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.601214Z", "completed_at": "2024-05-23T22:24:34.601219Z"}], "thread_id": "Thread-2", "execution_time": 0.017760038375854492, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__account_report_source_relation__date_day__account_id.bf8a017de1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__account_report`\n    group by source_relation, date_day, account_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.590445Z", "completed_at": "2024-05-23T22:24:34.605775Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.607137Z", "completed_at": "2024-05-23T22:24:34.607142Z"}], "thread_id": "Thread-3", "execution_time": 0.023247957229614258, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__account_report_account_id.9be02b4024", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect account_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__account_report`\nwhere account_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.597735Z", "completed_at": "2024-05-23T22:24:34.606035Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.607907Z", "completed_at": "2024-05-23T22:24:34.607911Z"}], "thread_id": "Thread-1", "execution_time": 0.019583940505981445, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_campaign_id.1ca7a83852", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history`\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.593584Z", "completed_at": "2024-05-23T22:24:34.606608Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.608673Z", "completed_at": "2024-05-23T22:24:34.608676Z"}], "thread_id": "Thread-4", "execution_time": 0.024120807647705078, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.dbt_utils_unique_combination_of_columns_stg_facebook_ads__campaign_history_source_relation__campaign_id__updated_at.82c4f9a2a1", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, campaign_id, updated_at\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history`\n    group by source_relation, campaign_id, updated_at\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.602832Z", "completed_at": "2024-05-23T22:24:34.607642Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.610442Z", "completed_at": "2024-05-23T22:24:34.610446Z"}], "thread_id": "Thread-2", "execution_time": 0.00956416130065918, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads_source.not_null_stg_facebook_ads__campaign_history_updated_at.9e59f99270", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect updated_at\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history`\nwhere updated_at is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.613614Z", "completed_at": "2024-05-23T22:24:34.632444Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.659069Z", "completed_at": "2024-05-23T22:24:34.659076Z"}], "thread_id": "Thread-3", "execution_time": 0.0492100715637207, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__ad_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`\n\n), \n\nconversion_report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`int_facebook_ads__conversions`\n\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history`\n    where is_most_recent_record = true\n\n),\n\nad_sets as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history`\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history`\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        ads.conversion_domain,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n        \n\n\n\n\n        , sum(coalesce(conversion_report.conversion_value, 0)) as conversion_value\n        \n\n\n    \n        , sum(coalesce(conversion_value_inline, 0)) as conversion_value_inline\n    \n        , sum(coalesce(_1_d_view, 0)) as _1_d_view\n    \n        , sum(coalesce(_7_d_click, 0)) as _7_d_click\n    \n        , sum(coalesce(_28_d_click, 0)) as _28_d_click\n    \n\n\n\n\n    from report \n    left join conversion_report\n        on report.date_day = conversion_report.date_day\n        and report.ad_id = conversion_report.ad_id\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11\n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__ad_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.626791Z", "completed_at": "2024-05-23T22:24:34.638302Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.659399Z", "completed_at": "2024-05-23T22:24:34.659403Z"}], "thread_id": "Thread-4", "execution_time": 0.048002004623413086, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__campaign_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`\n\n), \n\nconversion_report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`int_facebook_ads__conversions`\n\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history`\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history`\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        campaigns.start_at,\n        campaigns.end_at,\n        campaigns.status,\n        campaigns.daily_budget,\n        campaigns.lifetime_budget,\n        campaigns.budget_remaining,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n        \n\n\n\n\n        , sum(coalesce(conversion_report.conversion_value, 0)) as conversion_value\n        \n\n\n    \n        , sum(coalesce(conversion_value_inline, 0)) as conversion_value_inline\n    \n        , sum(coalesce(_1_d_view, 0)) as _1_d_view\n    \n        , sum(coalesce(_7_d_click, 0)) as _7_d_click\n    \n        , sum(coalesce(_28_d_click, 0)) as _28_d_click\n    \n\n\n\n\n    from report \n    left join conversion_report\n        on report.date_day = conversion_report.date_day\n        and report.ad_id = conversion_report.ad_id\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12\n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__campaign_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.620244Z", "completed_at": "2024-05-23T22:24:34.638599Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.659688Z", "completed_at": "2024-05-23T22:24:34.659692Z"}], "thread_id": "Thread-1", "execution_time": 0.04911208152770996, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__ad_set_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`\n\n), \n\nconversion_report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`int_facebook_ads__conversions`\n\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`\n    where is_most_recent_record = true\n\n),\n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history`\n    where is_most_recent_record = true\n\n),\n\nad_sets as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history`\n    where is_most_recent_record = true\n\n),\n\nads as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history`\n    where is_most_recent_record = true\n\n),\n\njoined as (\n\n    select \n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ad_sets.start_at,\n        ad_sets.end_at,\n        ad_sets.bid_strategy,\n        ad_sets.daily_budget,\n        ad_sets.budget_remaining,\n        ad_sets.optimization_goal,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n        \n\n\n\n\n        , sum(coalesce(conversion_report.conversion_value, 0)) as conversion_value\n        \n\n\n    \n        , sum(coalesce(conversion_value_inline, 0)) as conversion_value_inline\n    \n        , sum(coalesce(_1_d_view, 0)) as _1_d_view\n    \n        , sum(coalesce(_7_d_click, 0)) as _7_d_click\n    \n        , sum(coalesce(_28_d_click, 0)) as _28_d_click\n    \n\n\n\n\n    from report \n    left join conversion_report\n        on report.date_day = conversion_report.date_day\n        and report.ad_id = conversion_report.ad_id\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14\n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__ad_set_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.632753Z", "completed_at": "2024-05-23T22:24:34.661529Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.664369Z", "completed_at": "2024-05-23T22:24:34.664373Z"}], "thread_id": "Thread-2", "execution_time": 0.04564404487609863, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.int_facebook_ads__creative_history", "compiled": true, "compiled_code": "\n\n\n\nwith base as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__creative_history`\n    where is_most_recent_record = true\n\n), \n\nurl_tags as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__url_tags`\n), \n\nurl_tags_pivoted as (\n\n    select \n        source_relation,\n        _fivetran_id,\n        creative_id,\n        min(case when key = 'utm_source' then value end) as utm_source,\n        min(case when key = 'utm_medium' then value end) as utm_medium,\n        min(case when key = 'utm_campaign' then value end) as utm_campaign,\n        min(case when key = 'utm_content' then value end) as utm_content,\n        min(case when key = 'utm_term' then value end) as utm_term\n    from url_tags\n    group by 1,2,3\n\n), \n\nfields as (\n\n    select\n        base.source_relation,\n        base._fivetran_id,\n        base.creative_id,\n        base.account_id,\n        base.creative_name,\n        coalesce(page_link,template_page_link) as url,\n        \n\n  \n    split(\n        coalesce(page_link,template_page_link),\n        '?'\n        )[safe_offset(0)]\n  \n\n as base_url,\n        \n    safe_cast(\n\n  \n    split(\n        \n\n  \n    split(\n        \n\n    replace(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'android-app://',\n        ''\n    )\n\n\n,\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/'\n        )[safe_offset(0)]\n  \n\n,\n        '?'\n        )[safe_offset(0)]\n  \n\n as string)\n as url_host,\n        '/' || \n    safe_cast(\n\n  \n    split(\n        \n\n    case when \n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    strpos(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/'\n\n    ), 0),\n            \n\n    strpos(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '?'\n\n    ) - 1\n            ) = 0\n        then ''\n    else\n        substr(\n            \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n            -1 * (\n\n    length(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n\n    )-coalesce(\n            nullif(\n\n    strpos(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '/'\n\n    ), 0),\n            \n\n    strpos(\n        \n\n    replace(\n        \n\n    replace(\n        coalesce(page_link,template_page_link),\n        'http://',\n        ''\n    )\n\n\n,\n        'https://',\n        ''\n    )\n\n\n,\n        '?'\n\n    ) - 1\n            ))\n        )\n    end,\n        '?'\n        )[safe_offset(0)]\n  \n\n as string)\n as url_path,\n        coalesce(url_tags_pivoted.utm_source, nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        coalesce(page_link,template_page_link),\n        'utm_source='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'')) as utm_source,\n        coalesce(url_tags_pivoted.utm_medium, nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        coalesce(page_link,template_page_link),\n        'utm_medium='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'')) as utm_medium,\n        coalesce(url_tags_pivoted.utm_campaign, nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        coalesce(page_link,template_page_link),\n        'utm_campaign='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'')) as utm_campaign,\n        coalesce(url_tags_pivoted.utm_content, nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        coalesce(page_link,template_page_link),\n        'utm_content='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'')) as utm_content,\n        coalesce(url_tags_pivoted.utm_term, nullif(\n\n  \n    split(\n        \n\n  \n    split(\n        coalesce(page_link,template_page_link),\n        'utm_term='\n        )[safe_offset(1)]\n  \n\n,\n        '&'\n        )[safe_offset(0)]\n  \n\n,'')) as utm_term\n    from base\n    left join url_tags_pivoted\n        on base._fivetran_id = url_tags_pivoted._fivetran_id\n        and base.source_relation = url_tags_pivoted.source_relation\n        and base.creative_id = url_tags_pivoted.creative_id\n)\n\nselect *\nfrom fields", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`int_facebook_ads__creative_history`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.669379Z", "completed_at": "2024-05-23T22:24:34.679776Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.681116Z", "completed_at": "2024-05-23T22:24:34.681122Z"}], "thread_id": "Thread-4", "execution_time": 0.018985986709594727, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__url_tags__fivetran_id.151d9515f3", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect _fivetran_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__url_tags`\nwhere _fivetran_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.665817Z", "completed_at": "2024-05-23T22:24:34.680072Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.681888Z", "completed_at": "2024-05-23T22:24:34.681892Z"}], "thread_id": "Thread-3", "execution_time": 0.020448923110961914, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_tags_source_relation___fivetran_id__key__type.c65de59dec", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, _fivetran_id, key, type\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__url_tags`\n    group by source_relation, _fivetran_id, key, type\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.672878Z", "completed_at": "2024-05-23T22:24:34.680617Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.682958Z", "completed_at": "2024-05-23T22:24:34.682962Z"}], "thread_id": "Thread-1", "execution_time": 0.02072000503540039, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_report_source_relation__date_day__account_id__campaign_id__ad_set_id__ad_id.c866a344f6", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__ad_report`\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.676872Z", "completed_at": "2024-05-23T22:24:34.681384Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.684036Z", "completed_at": "2024-05-23T22:24:34.684041Z"}], "thread_id": "Thread-2", "execution_time": 0.009550094604492188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__campaign_report_source_relation__date_day__account_id__campaign_id.f97e1afff3", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__campaign_report`\n    group by source_relation, date_day, account_id, campaign_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.687889Z", "completed_at": "2024-05-23T22:24:34.701232Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.702897Z", "completed_at": "2024-05-23T22:24:34.702902Z"}], "thread_id": "Thread-4", "execution_time": 0.024523019790649414, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__ad_report_ad_id.3811d9c238", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__ad_report`\nwhere ad_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.691416Z", "completed_at": "2024-05-23T22:24:34.701561Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.709123Z", "completed_at": "2024-05-23T22:24:34.709127Z"}], "thread_id": "Thread-3", "execution_time": 0.024293184280395508, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__campaign_report_campaign_id.d4f96d8d21", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect campaign_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__campaign_report`\nwhere campaign_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.695445Z", "completed_at": "2024-05-23T22:24:34.702141Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.709948Z", "completed_at": "2024-05-23T22:24:34.709952Z"}], "thread_id": "Thread-1", "execution_time": 0.024222850799560547, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__ad_set_report_source_relation__date_day__account_id__campaign_id__ad_set_id.8707f6bd30", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__ad_set_report`\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.698361Z", "completed_at": "2024-05-23T22:24:34.702422Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.710237Z", "completed_at": "2024-05-23T22:24:34.710240Z"}], "thread_id": "Thread-2", "execution_time": 0.021254777908325195, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__ad_set_report_ad_set_id.1ac870f5e4", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect ad_set_id\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__ad_set_report`\nwhere ad_set_id is null\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.713102Z", "completed_at": "2024-05-23T22:24:34.719657Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.720139Z", "completed_at": "2024-05-23T22:24:34.720144Z"}], "thread_id": "Thread-4", "execution_time": 0.008156776428222656, "adapter_response": {}, "message": null, "failures": null, "unique_id": "model.facebook_ads.facebook_ads__url_report", "compiled": true, "compiled_code": "\n\nwith report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__basic_ad`\n\n), \n\nconversion_report as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`int_facebook_ads__conversions`\n\n), \n\ncreatives as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`int_facebook_ads__creative_history`\n\n), \n\naccounts as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__account_history`\n    where is_most_recent_record = true\n\n), \n\nads as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_history`\n    where is_most_recent_record = true\n\n), \n\nad_sets as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__ad_set_history`\n    where is_most_recent_record = true\n\n), \n\ncampaigns as (\n\n    select *\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`stg_facebook_ads__campaign_history`\n    where is_most_recent_record = true\n\n), \n\njoined as (\n\n    select\n        report.source_relation,\n        report.date_day,\n        accounts.account_id,\n        accounts.account_name,\n        campaigns.campaign_id,\n        campaigns.campaign_name,\n        ad_sets.ad_set_id,\n        ad_sets.ad_set_name,\n        ads.ad_id,\n        ads.ad_name,\n        creatives.creative_id,\n        creatives.creative_name,\n        creatives.base_url,\n        creatives.url_host,\n        creatives.url_path,\n        creatives.utm_source,\n        creatives.utm_medium,\n        creatives.utm_campaign,\n        creatives.utm_content,\n        creatives.utm_term,\n        sum(report.clicks) as clicks,\n        sum(report.impressions) as impressions,\n        sum(report.spend) as spend\n        \n\n\n\n\n        , sum(coalesce(conversion_report.conversion_value, 0)) as conversion_value\n        \n\n\n    \n        , sum(coalesce(conversion_value_inline, 0)) as conversion_value_inline\n    \n        , sum(coalesce(_1_d_view, 0)) as _1_d_view\n    \n        , sum(coalesce(_7_d_click, 0)) as _7_d_click\n    \n        , sum(coalesce(_28_d_click, 0)) as _28_d_click\n    \n\n\n\n\n    from report\n    left join conversion_report\n        on report.date_day = conversion_report.date_day\n        and report.ad_id = conversion_report.ad_id\n    left join ads \n        on report.ad_id = ads.ad_id\n        and report.source_relation = ads.source_relation\n    left join creatives\n        on ads.creative_id = creatives.creative_id\n        and ads.source_relation = creatives.source_relation\n    left join ad_sets\n        on ads.ad_set_id = ad_sets.ad_set_id\n        and ads.source_relation = ad_sets.source_relation\n    left join campaigns\n        on ads.campaign_id = campaigns.campaign_id\n        and ads.source_relation = campaigns.source_relation\n    left join accounts\n        on report.account_id = accounts.account_id\n        and report.source_relation = accounts.source_relation  \n\n    \n        where creatives.url is not null\n    \n    \n    group by 1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20\n)\n\nselect *\nfrom joined", "relation_name": "`dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__url_report`"}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.722183Z", "completed_at": "2024-05-23T22:24:34.729792Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.730296Z", "completed_at": "2024-05-23T22:24:34.730301Z"}], "thread_id": "Thread-3", "execution_time": 0.009428024291992188, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.dbt_utils_unique_combination_of_columns_facebook_ads__url_report_source_relation__date_day__account_id__campaign_id__ad_set_id__ad_id.ef8d3469d4", "compiled": true, "compiled_code": "\n\n\n\n\n\nwith validation_errors as (\n\n    select\n        source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    from `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__url_report`\n    group by source_relation, date_day, account_id, campaign_id, ad_set_id, ad_id\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n", "relation_name": null}, {"status": "success", "timing": [{"name": "compile", "started_at": "2024-05-23T22:24:34.725974Z", "completed_at": "2024-05-23T22:24:34.731148Z"}, {"name": "execute", "started_at": "2024-05-23T22:24:34.731613Z", "completed_at": "2024-05-23T22:24:34.731616Z"}], "thread_id": "Thread-1", "execution_time": 0.006761074066162109, "adapter_response": {}, "message": null, "failures": null, "unique_id": "test.facebook_ads.not_null_facebook_ads__url_report_base_url.b7757e50be", "compiled": true, "compiled_code": "\n    \n    \n\n\n\nselect base_url\nfrom `dbt-package-testing`.`facebook_ads_source_facebook_ads_dev`.`facebook_ads__url_report`\nwhere base_url is null\n\n\n", "relation_name": null}], "elapsed_time": 1.9353070259094238, "args": {"profiles_dir": "/Users/jamie.rodriguez/.dbt", "project_dir": "/Users/jamie.rodriguez/Desktop/dbt_repos/Ads/Facebook_ads/dbt_facebook_ads/integration_tests", "partial_parse_file_diff": true, "favor_state": false, "send_anonymous_usage_stats": true, "version_check": true, "write_json": true, "quiet": false, "vars": {}, "static": false, "use_colors": true, "indirect_selection": "eager", "defer": false, "cache_selected_only": false, "static_parser": true, "print": true, "log_level_file": "debug", "warn_error_options": {"include": [], "exclude": []}, "exclude": [], "log_format_file": "debug", "empty_catalog": false, "log_format": "default", "populate_cache": true, "strict_mode": false, "use_colors_file": true, "select": [], "invocation_command": "dbt docs generate", "compile": true, "log_path": "/Users/jamie.rodriguez/Desktop/dbt_repos/Ads/Facebook_ads/dbt_facebook_ads/integration_tests/logs", "partial_parse": true, "printer_width": 80, "log_file_max_bytes": 10485760, "macro_debugging": false, "log_level": "info", "which": "generate", "show_resource_report": false, "introspect": true, "enable_legacy_logger": false}}